"use strict";(self.webpackChunk_callstack_byorg_docs=self.webpackChunk_callstack_byorg_docs||[]).push([["102"],{7370:function(e,r,s){s.r(r),s.d(r,{default:function(){return o}});var n=s(651),a=s(6971);function t(e){let r=Object.assign({h1:"h1",a:"a",p:"p",pre:"pre",code:"code",h2:"h2",div:"div"},(0,a.ah)(),e.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(r.h1,{id:"performance",children:["Performance",(0,n.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#performance",children:"#"})]}),"\n",(0,n.jsx)(r.p,{children:"To test your application's performance, you can use the performance object available in the context."}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-js",children:'const slowPlugin: Promise<MessageResponse> = {\n  name: \'slow-plugin\',\n  middleware: async (context, next): Promise<MessageResponse> => {\n\n    context.performance.markStart("SlowPluginPerformance");\n    await slowFunction();\n    context.performance.markEnd("SlowPluginPerformance");\n\n    // Continue middleware chain\n    return next();\n  },\n};\n'})}),"\n",(0,n.jsx)(r.p,{children:"After collecting your performance data, you can access it through the same performance object. Performance tracking requires all processes to complete, so it uses effect instead of middleware, as it runs after the response is finalized."}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-js",children:"const analyticsPlugin: Promise<MessageResponse> = {\n  name: 'analytics',\n  effects: [analyticsEffect]\n};\n\nasync function analyticsEffect(context: RequestContext, response: MessageResponse): Promise<void> {\n  console.log(context.performance.getMeasureTotal(\"SlowPluginPerformance\"))\n}\n"})}),"\n",(0,n.jsxs)(r.h2,{id:"measures-vs-marks",children:["Measures vs Marks",(0,n.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#measures-vs-marks",children:"#"})]}),"\n",(0,n.jsxs)(r.p,{children:["This concept is inspired by the ",(0,n.jsx)(r.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Performance",target:"_blank",rel:"noopener noreferrer",children:"Web Performance API"}),". Marks are essentially named sequences that the performance tool uses to measure execution time. For instance, if you have a tool for your AI and want to evaluate its performance, you might find it triggered multiple times by the AI. Therefore, a single mark can be part of multiple measures. A measure is constructed using two marks: ",(0,n.jsx)(r.code,{children:"start"})," and ",(0,n.jsx)(r.code,{children:"end"}),"."]}),"\n",(0,n.jsxs)(r.div,{className:"rspress-directive info",children:[(0,n.jsx)(r.div,{className:"rspress-directive-title",children:"INFO"}),(0,n.jsx)(r.div,{className:"rspress-directive-content",children:(0,n.jsxs)(r.p,{children:["You can also access all marks and measures using ",(0,n.jsx)(r.code,{children:"getMarks"})," and ",(0,n.jsx)(r.code,{children:"getMeasures"}),"\n"]})})]}),"\n",(0,n.jsxs)(r.h2,{id:"default-measures",children:["Default measures",(0,n.jsx)(r.a,{className:"header-anchor","aria-hidden":"true",href:"#default-measures",children:"#"})]}),"\n",(0,n.jsx)(r.p,{children:"Byorg automatically gathers performance data. Middleware measures are collected in two separate phases: before handling the response and after it."}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-js",children:"export const PerformanceMarks = {\n  processMessages: 'processMessages',\n  middlewareBeforeHandler: 'middleware:beforeHandler',\n  middlewareAfterHandler: 'middleware:afterHandler',\n  chatModel: 'chatModel',\n  toolExecution: 'toolExecution',\n  errorHandler: 'errorHandler',\n} as const;\n"})})]})}function c(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:r}=Object.assign({},(0,a.ah)(),e.components);return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(t,{...e})}):t(e)}let o=c;c.__RSPRESS_PAGE_META={},c.__RSPRESS_PAGE_META["docs%2Fcore%2Fperformance.md"]={toc:[{text:"Measures vs Marks",id:"measures-vs-marks",depth:2},{text:"Default measures",id:"default-measures",depth:2}],title:"Performance",headingTitle:"Performance",frontmatter:{}}}}]);