"use strict";(self.webpackChunk_callstack_byorg_docs=self.webpackChunk_callstack_byorg_docs||[]).push([["136"],{843:function(e,n,t){t.r(n),t.d(n,{default:function(){return a}});var s=t(651),r=t(6971);function o(e){let n=Object.assign({h1:"h1",a:"a",p:"p",code:"code",h3:"h3",pre:"pre",div:"div"},(0,r.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"context",children:["Context",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#context",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"context"})," object holds information about the currently processed message. It allows you to modify the behavior of your assistant at runtime or alter the message processing flow."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Context"})," can be modified by ",(0,s.jsx)(n.a,{href:"/docs/core/plugins",children:"middlewares"})," during the message processing flow to implement highly flexible logic or rules (e.g., authentication, RAG, etc.)."]}),"\n",(0,s.jsxs)(n.h3,{id:"properties-in-context",children:["Properties in Context",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#properties-in-context",children:"#"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"export type RequestContext = {\n  /** All messages from given conversation */\n  messages: Message[];\n\n  /** Convenience reference to the last `messages` item which is the latest `UserMessage`. */\n  lastMessage: UserMessage;\n\n  /** Declarations of tools for ai assistant */\n  tools: ApplicationTool[];\n\n  /** Storage with references to documents mentioned in the conversation */\n  references: ReferenceStorage;\n\n  /** Ids of users who are a part of conversation */\n  resolvedEntities: EntityInfo;\n\n  /** Chat model instance */\n  chatModel: ChatModel;\n\n  /** Function generating a system prompt (bound to the context) */\n  systemPrompt: () => string | null;\n\n  /** \n   * Received partial response update with response streaming.\n   * Note: setting this option will switch underlying assistant calls to streaming format. \n   */\n  onPartialResponse?: (text: string) => void;\n\n  /** Measures and marks for performance tracking */\n  performance: PerformanceTimeline;\n\n  /** Container for additional custom properties */\n  extras: MessageRequestExtras;\n};\n"})}),"\n",(0,s.jsx)(n.p,{children:"To add typing for your custom properties to the context, create a file with the type definition and override the typing."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"declare module '@callstack/byorg-core' {\n  interface MessageRequestExtras {\n    // Here you can add your own properties\n    example?: string;\n    messagesCount?: number;\n    isAdmin?: boolea;\n  }\n}\n\nexport {};\n"})}),"\n",(0,s.jsxs)(n.div,{className:"rspress-directive warning",children:[(0,s.jsx)(n.div,{className:"rspress-directive-title",children:"WARNING"}),(0,s.jsx)(n.div,{className:"rspress-directive-content",children:(0,s.jsx)(n.p,{children:"All custom properties must be optional, as the current context creation does not support default values for custom objects."})})]}),"\n",(0,s.jsx)(n.p,{children:"After setting extras, you can access them from the context object:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"export const systemPrompt = (context: RequestContext): Promise<string> | string => {\n  if (context.extras.isAdmin) {\n    return `You are currently talking to an admin.`;\n  }\n\n  return `You are talking to user with regular permissions.`;\n};\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Next, weâ€™ll explore the concept of ",(0,s.jsx)(n.code,{children:"plugins"})," to understand how to modify the ",(0,s.jsx)(n.code,{children:"context"}),"."]})]})}function i(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}let a=i;i.__RSPRESS_PAGE_META={},i.__RSPRESS_PAGE_META["docs%2Fcore%2Fcontext.md"]={toc:[{text:"Properties in Context",id:"properties-in-context",depth:3}],title:"Context",frontmatter:{}}}}]);