"use strict";(self.webpackChunk_callstack_byorg_docs=self.webpackChunk_callstack_byorg_docs||[]).push([["376"],{3262:function(e,n,t){t.r(n),t.d(n,{default:function(){return o}});var s=t(651),a=t(6971);function c(e){let n=Object.assign({h2:"h2",a:"a",p:"p",code:"code",pre:"pre"},(0,a.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h2,{id:"integrating-with-slack",children:["Integrating with Slack",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#integrating-with-slack",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["Byorg provides built-in functionality to integrate your application with Slack. To set this up, use the ",(0,s.jsx)(n.code,{children:"createSlackApp"})," function and provide the necessary parameters."]}),"\n",(0,s.jsxs)(n.h2,{id:"http-endpoint-mode",children:["Http endpoint mode",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#http-endpoint-mode",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["In this mode you use SlackApp to receive Slack event objects directly.\nHere's a ",(0,s.jsx)(n.a,{href:"https://cloud.google.com/functions/docs/tutorials/slack",target:"_blank",rel:"noopener noreferrer",children:"tutorial"})," on setting up a Google Cloud Function with event receiver."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"const app = createApp({\n  chatModel,\n  systemPrompt,\n});\n\nconst slack = createSlackApp({\n  app,\n  token: 'slack_bot_token',\n  appToken: 'slack_app_token',\n  signingSecret: 'slack_signing_secret',\n});\n"})}),"\n",(0,s.jsx)(n.p,{children:"Once you have an instance of an app wrapped in slack handler, you need to pass it the event\nreceived from slack endpoint."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"slack.processEvent(event);\n"})}),"\n",(0,s.jsxs)(n.p,{children:["We provide automatic parsing from slack event to our internal event. We also provide custom formatter to\n",(0,s.jsx)(n.a,{href:"https://api.slack.com/block-kit",target:"_blank",rel:"noopener noreferrer",children:"slack blocks"})," that uses ",(0,s.jsx)(n.code,{children:"slack-rich-text"})," package."]}),"\n",(0,s.jsxs)(n.h2,{id:"websocket-mode",children:["Websocket mode",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#websocket-mode",children:"#"})]}),"\n",(0,s.jsxs)(n.p,{children:["Alternatively, you can use ",(0,s.jsx)(n.a,{href:"https://tools.slack.dev/bolt-js/concepts/socket-mode",target:"_blank",rel:"noopener noreferrer",children:"Slack SDK"})," ability to connect to Slack API using WebSockets. This can be helpful in cases when you want to setup your server in a setting without public IP connection and/or for development purposes."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"const slack = createSlackApp({\n  app,\n  websocket: true,\n  token: 'slack_bot_token',\n  appToken: 'slack_app_token',\n  signingSecret: 'slack_signing_secret',\n});\n\nslack.start();\n"})}),"\n",(0,s.jsxs)(n.h2,{id:"types",children:["Types",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#types",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"When using byorg-slack package, the context.extras field will contain various Slack-related fields."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"declare module '@callstack/byorg-core' {\n  interface MessageRequestExtras {\n    // Set by \"byorg-slack\" plugin\n    threadTs?: string; // Thread timestamp (used as id)\n    messageTs?: string; // Message timestamp (used as id)\n    conversationMode?: ConversationMode; // Whether message was a `public_channel` or `direct`\n  }\n}\n\nexport {};\n"})})]})}function r(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,a.ah)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}let o=r;r.__RSPRESS_PAGE_META={},r.__RSPRESS_PAGE_META["docs%2Fintegrations%2Fslack-usage.md"]={toc:[{text:"Integrating with Slack",id:"integrating-with-slack",depth:2},{text:"Http endpoint mode",id:"http-endpoint-mode",depth:2},{text:"Websocket mode",id:"websocket-mode",depth:2},{text:"Types",id:"types",depth:2}],title:"",frontmatter:{}}}}]);